datatext = "
Candidate	Overall	Memb1	Memb2	Memb3	Memb4	Memb5	Memb6	Memb7	Memb8	Memb9
1	72.7	63	77	70	68	76	70	73	75	77
2	64.1	70	68	61	61	65	65	66	63	61
3	67.7	67	67	71	67	62	63	73	66	74
4	64.3	64	77	64	69	61	64	67	60	61
5	72.4	70	74	70	68	74	72	74	73	78
6	68.9	69	75	80	63	61	70	65	64	76
7	69.4	73	80	76	70	70	65	65	67	62
8	68.6	68	67	76	68	61	74	63	72	68
9	68.1	64	71	70	76	69	65	70	61	68
10	69.3	67	62	73	73	68	79	67	74	63
11	67.3	62	64	73	78	63	62	69	67	73
12	67.4	65	68	65	77	66	68	66	71	68
13	70.9	71	74	74	64	77	65	66	70	76
14	68.1	74	66	69	64	74	69	66	65	68
15	80.7	84	79	91	83	80	78	80	81	76
16	83.6	92	79	81	84	89	88	75	79	85
17	83.4	76	85	88	89	84	83	79	96	75
18	88.6	90	94	85	93	89	88	87	85	88
19	89.9	84	83	87	95	92	91	89	91	95
20	80.4	85	84	88	80	78	76	84	75	76
21	85.0	80	85	92	85	76	86	86	84	89
22	81.1	83	88	91	75	75	76	77	82	87
23	84.0	78	96	77	87	86	83	80	83	91
24	80.0	82	79	81	81	81	76	75	80	82
25	86.0	87	84	81	89	89	82	84	89	87
26	89.7	91	90	95	97	86	88	85	89	89
27	80.4	73	86	90	86	76	73	81	82	79
28	86.0	80	89	85	90	91	76	86	88	84
"
d<-read.delim(textConnection(datatext),
header=TRUE,
sep="",
strip.white=TRUE)
d_null = lm(d$Overall ~ 1)
d_full = lm(d$Overall ~ d$Memb1 + d$Memb2 + d$Memb3 + d$Memb4 + d$Memb5 + d$Memb6 + d$Memb7 + d$Memb8 + d$Memb9)
step(d_null, scope=list(lower=d_null, upper= d_full), direction = "forward")
datatext = "
YearOfStudy	Vote
2.7	1
0.2	0
0.5	0
1.1	0
1.6	1
1.6	0
1.5	1
0.2	0
0.3	0
2	1
1.9	1
0.9	0
3.6	1
0.6	0
1.9	1
1.5	0
2.4	0
1	1
3.6	0
2.2	1
0.7	0
0.4	0
1	0
2.8	0
3.1	1
3.1	1
1.8	1
0.4	0
3.6	0
3	0
0.4	0
0.7	0
0.2	0
3	1
0.9	0
0.9	0
0.5	1
0.7	0
2.3	0
0.1	0
0.8	0
1.1	0
0.3	0
0.4	0
0.1	0
0.7	0
3.1	1
0.9	0
1.3	0
0.8	1
1.4	0
0.5	0
3.1	1
1.4	0
0.3	0
1	0
0.2	0
2.2	1
2.9	1
0.5	1
2.7	1
1.1	0
0.1	1
2.2	1
0.4	0
1	0
0.8	0
0.2	0
1.8	1
0.7	0
1.7	1
0.5	0
2.6	1
0.4	0
2.3	1
3.7	0
0.4	0
3.2	0
0.4	0
0.6	0
1.8	1
0.7	0
0.7	0
0.4	0
1.5	0
0.5	0
0.4	0
1	0
0.4	0
0.1	1
1.4	0
2	1
3.2	0
0.9	0
1.2	0
1.8	1
2.5	1
3.3	0
2.5	0
0.1	0
1.9	1
0	0
1.2	0
0.9	0
1.9	0
0.6	0
1.4	0
0.6	0
1.6	0
0.6	0
1.4	0
2.3	0
2.4	1
0.3	0
0.1	0
1.9	1
0	0
0.4	0
4	1
0.6	0
2.1	1
0.3	0
0.3	0
1.3	0
0.3	0
1.7	1
1	0
2.8	1
0.3	0
0.5	0
2.3	1
1.5	1
2.5	0
0.9	0
1	0
0.8	0
3.1	1
3.2	0
2.9	1
0.4	0
0.6	0
0.7	0
1.5	0
2.2	1
0.2	0
1.4	0
0.6	0
0.9	0
2.8	1
3	1
1.5	1
1	0
2.4	1
1.4	0
1.5	1
2.9	1
0.7	0
2	1
2.5	1
0.2	0
0.2	0
1.6	0
3.6	1
1.3	0
1.8	1
0.9	0
1.4	0
0.7	1
3.2	0
0.4	0
2.1	1
1.5	0
0.2	0
0.3	0
2.4	1
0.1	0
1	0
2.9	0
3.6	0
2.5	1
0.5	0
1.1	0
0.5	0
1.1	0
0.8	0
2.1	1
0.3	0
2.9	1
0.2	0
3	1
0.2	0
1.8	0
0.1	0
0.9	0
0.7	1
0.2	0
0.1	0
0.9	0
0.8	0
0.3	0
"
d<-read.delim(textConnection(datatext),
header=TRUE,
sep="",
strip.white=TRUE)
log_model = glm(d$YearOfStudy ~ d$Vote, family = "binomial")
log_model = glm(d$Vote ~ d$YearOfStudy, family = "binomial")
summary(log_model)
library("boot", lib.loc="C:/Program Files/Microsoft/R Client/R_SERVER/library")
detach("package:boot", unload=TRUE)
1.200*30
1/200*30
1/200*30
(59+2)/3
sin(pi/3)
sin(pi/2)
7%%4
7>4
7!=6
if 7 in (7|8)
x
x <- 7+2
x
x <- "hello world
""
x <- "hello world
x <- "hello world
"
x
y <- "HI everyone"
y
1/200*3
x<-34+1
x<-3 + 4j
x <- "3+3i"
x <- 3+3I
4==5
4==4
x <- True
x <- 4==4
x
x<-FALSE
x
!x
x- 2
x=2
x
x = "Java is not fun"
x
x = 4==4
x
pnc <-  function(x) {
for (i in range(2, x+1)) {
if x % i == 0
getwd()
getwd()
getwd()
setwd("C:/Users/xthel_000/Desktop/NTU/R/Art of R")
getwd()
help("mean")
help("read.table")
example(seq)
seq> seq(0, 1, length.out=11)
seq(0, 1, length.out=11)
example(persp)
x <- c(88,5,12,13)
x <- c(x[1:2],168,x[3:4]) # insert 168 before the 12
x
x <- (1,2,3,4,5,6)
lengt(x)
length(x)
x <- (1,2,3,4,5,6)
length(x)
x <- c(1,2,3,4,5,6)
length(x)
x <- c(1,2,3,4,5,6)
length(x)
first1 <- function(x){
for (i in 1:length(x)){
if (x[i] ==1) break #break out of loop
}
return(i)
}
first1((c(1,2,3,7,9)))
first1((c(5,2,3,7,9)))
first1((c(5,2,3,1,9)))
first1((c(5,1,3,3,9)))
m <- rbind(c(1,2),c(3,4))
m
m+10:13
m <- rbind(c(1,2),c(3,4),c(5,6))
m
m+1:6 #adds  (10,11,12,13) to m
y <- vector(length=2) # create y ﬁrst
y[1] <- 5
y[2] <- 12
y
y <- data.frame(c(1,3),c(2,4))
y
y[1,][,1]
y[1,][,1] <- 8
y
m <- rbind(c(1,2),c(3,4))
m
m+10:13 #adds  (10,11,12,13) to m
c(1,2,4) + c(6,0,9,20,22)
x <- cbind(c(1,2,3),c(4,5,6))
x
x+c(1,2)
y <- c(1,1,0,1)
csx <- c(0,cumsum(y))
csx
m <- rbind(c(1,2),c(3,4))
m
y <- vector(length=2) # create y ﬁrst
y
y[1] <- 5
y[2] <- 12
y
y <- data.frame(c(1,3),c(2,4))
y[1,][,1] <- 8 #Change value in 1,1 to 8
y
y <- data.frame(c(1,3),c(2,4))
x <- y <- data.frame(c(1,0),c(2,0))
x %*% y
x <- data.frame(c(1,0),c(2,0))
y <- data.frame(c(1,3),c(2,4))
x %*% y
x
y
m <- rbind(c(1,2),c(3,4))
n <- rbind(c(1,0),c(3,0))
m%*%n
m
n
u <- c(5,2,8)
v <- c(1,3,9)
u>v
w <- function(x) return(x+1)
w(u)
sqrt(1:9)
y <- c(1.2,3.9,0.4)
z <- round(y)
z
f function(x,c) return((x+c)^2)
f <- function(x,c) return((x+c)^2)
f(1:3,0)
f(1:3,1)
f(1:3,1:3)
f <- function(x,c) {
if (length(c) != 1) stop("vector c not allowed")
return((x+c)^2)
}
f(1:3,1:3)
f(1:3,1)
z12 <- function(z) return(c(z,z^2))
z12(1:8)
matrix(z12(x),ncol=2) #Arrange the above into a 8x2 matrix
matrix(z12(1:8),ncol=2) #Arrange the above into a 8x2 matrix
matrix(z12(1:8),ncol=3) #Arrange the above into a 8x2 matrix
z12 <- function(z) return(c(z,z^2))
sapply(1:8,z12)
z12 <- function(z) return(c(z,z^2,sqrt(z)))
sapply(1:8,z12)
z12 <- function(z) return(c(z,z^2))
sapply(1:8,z12)
x <- c(88,NA,12,168,13)
mean(x)
mean(x,na.rm=T)
x <- c(88,NULL,12,168,13)
mean(x)
z <- NULL
for (i in 1:10) if (i %%2 == 0) z <- c(z,i)
z
seq(2,11,2) #Display values from 2 to 10 with a step of 2
2 *1:5
z <- NA
for (i in 1:10) if (i %%2 == 0) z <- c(z,i)
z #NA 2 4 6 8 10
u <- NULL
length(u)
v <- NA
length(u)
length(v)
z <- c(5,2,-3,8)
w <- z[z*z>8]
w
z*z>8
j <- z
y[j]
z <- c(5,2,-3,8)
j <- z
y <- c(1,2,30,5)
y[j]
z <- c(5,2,-3,8)
j <- z*z>8
y <- c(1,2,30,5)
y[j]
x <- c(1,3,8,2,20)
x[x > 3] <- 0
x
x <- c(6,1:3,NA,12)
x
x[x > 5]
subset(x,x > 5)
z <- c(5,2,-3,8)
which(z*z > 8)
library(devtools)
options(devtools.install.args = "--no-multiarch") # if you have 64-bit R only, you can skip this
install_github("Microsoft/LightGBM", subdir = "R-package")
library(xgboost)
library(ggplot2)
set.seed(2004)
library(rpart)
library(rattle)					# Fancy tree plot
library(rpart.plot)
library(party)
library(sandwich)
library(caret)
library(randomForest)
library(e1071)
install.packages("e1071")
library(e1071)
setwd('G:/NTU/Coursera/Machine Learning/2/machine-learning-ex1/ex1')
df <- read.table('ex1data2.txt', header = FALSE)
View(df)
df <- read.table('ex1data2.txt', header = FALSE, sep = ',')
View(df)
m1 <- lm(V3 ~. data = df)
m1 <- lm(V3 ~.,  data = df)
summary(m1)
